---
name: Template Destroy
run-name: Terraform Destroy Workflow

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
    secrets:
      DOMAINNAME:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_ROLE_ARN:
        required: true
      AWS_S3_BACKEND:
        required: true
      AWS_S3_BACKEND_KEY:
        required: true

jobs:
  Destroy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Setup Environment variable
        run: |
          echo "ENVIRONMENT=${{ inputs.ENVIRONMENT }}" >> $GITHUB_ENV
          echo "👷ENVIRONMENT: ${{ inputs.ENVIRONMENT }}"

      - name: Checkout Template Code
        uses: actions/checkout@v4
        with:
          repository: edelux/terraform-template
      - name: Backup Templates
        run: tar cf ../templates.tar templates

      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Restore Templates
        run: tar xf ../templates.tar && rm ../templates.tar
  
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ inputs.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
  
      - name: apt install
        run: |
          sudo apt update 2>&1> /dev/null
          test -e /usr/bin/j2       ||  sudo apt install -y j2cli 2>&1> /dev/null    && echo "✨ j2-> Istalled sussesfuly"        || echo "💥 j2-> Installed faulere"
          test -e /usr/bin/envsubst ||  sudo apt install -y gettext 2>&1> /dev/null  && echo "✨ envsubst-> Istalled sussesfuly"  || echo "💥 envsubst-> Installed faulere"

      - name: Init
        run: |
          export AWS_S3_BACKEND=${{ secrets.AWS_S3_BACKEND }}
          export AWS_S3_BACKEND_KEY=${{ secrets.AWS_S3_BACKEND_KEY }}

          j2 -e AWS_S3_BACKEND -e AWS_S3_BACKEND_KEY templates/backend.j2 -o backend.conf && echo "✨ backend.conf"
          unset AWS_S3_BACKEND AWS_S3_BACKEND_KEY

          terraform init -backend-config=backend.conf
          terraform workspace select ${{ inputs.ENVIRONMENT }} && \
             echo "👷 ${{ inputs.ENVIRONMENT }} workspace " || \
                echo "🚨${{ inputs.ENVIRONMENT }} workspace don't exist🚨'"

          echo "👷terraform workspace list" && terraform workspace list

      - name: Destroy
        run: |
          terraform destroy -var="environment=$ENVIRONMENT" -auto-approve && \
             printf '%s\n' '✨✨✨' "✨✨  Destroy ${{ inputs.ENVIRONMENT }}   🏗️" '✨' || \
                printf '%s\n' '🔥🔥🔥' '🔥🔥Error to Destroy    🚑️' '🔥'
