---
name: Destroy
run-name: Destroy Workflow

on:
  workflow_dispatch:
    inputs:
      uphold:
        description: "Do you confirm? yes/no"
        required: true
        type: boolean
        default: false
      environment:
        description: "Environment for Destroy"
        required: true
        type: choice
        options:
          - dev
          - qa
          - staging
          - prod
          - backend
jobs:
  Destroy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
  
      - name: Destroy Terraform Backend
        if: ${{ inputs.environment == 'backend' && inputs.uphold }}
        run: |
          sudo apt update 2>&1> /dev/null
          sudo apt install -y j2cli 2>&1> /dev/null
          mkdir -p backend
          export AWS_S3_BACKEND=${{ secrets.AWS_S3_BACKEND }}
          j2 -e AWS_S3_BACKEND templates/backend.bootstrap.j2 -o backend/main.tf
          unset AWS_S3_BACKEND
          aws s3 cp s3://${{ secrets.AWS_S3_BACKEND }}/bootstrap/terraform.tfstate backend/
          terraform -chdir=backend init
          terraform -chdir=backend destroy -auto-approve
          echo "ðŸš¨ðŸš¨ðŸš¨Remove Terraform backend bucket bucket and dbnamodb tableðŸš¨ðŸš¨ðŸš¨"

      - name: Destroy Infra ${{ inputs.environment }}
        if: ${{ inputs.environment != 'backend' && inputs.uphold }}
        run: |
          sudo apt update 2>&1> /dev/null
          sudo apt install -y j2cli 2>&1> /dev/null

          export AWS_S3_BACKEND=${{ secrets.AWS_S3_BACKEND }}
          export AWS_BACKEND_KEY_NETWORKING=${{ vars.AWS_BACKEND_KEY_NETWORKING }}
          j2 -e AWS_S3_BACKEND -e AWS_BACKEND_KEY_NETWORKING templates/backend.j2 -o backend.conf
          unset AWS_BACKEND_KEY_NETWORKING AWS_S3_BACKEND

          terraform init -backend-config=backend.conf
          terraform workspace select ${{ env.ENVIRONMENT }}

          test -e configs.yaml && j2 configs.yaml -o configs.yaml
          test -e configs.yaml.j2 && j2 configs.yaml.j2 -o configs.yaml
          test -e templates/configs.yaml.j2 && j2 templates/configs.yaml.j2 -o configs.yaml

          terraform destroy -var="environment=$ENVIRONMENT" -auto-approve
          echo "ðŸš¨ðŸš¨ðŸš¨Destroy ${{ inputs.environment }} infraestructure ðŸš¨ðŸš¨ðŸš¨"
