---
name: Template Destroy
run-name: Terraform Destroy Workflow

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        type: string
        required: true
      AWS_REGION:
        type: string
        required: true
    secrets:
      DOMAINNAME:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      AWS_ROLE_ARN:
        required: true
      AWS_S3_BACKEND:
        required: true
      AWS_S3_BACKEND_KEY:
        required: true

jobs:
  Destroy:
    runs-on: ubuntu-latest

    environment: ${{ inputs.ENVIRONMENT }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Setup Environment variable
        run: |
          echo "${{ secrets.AWS_ACCOUNT_ID }} ${{ secrets.DOMAINNAME }}"
          echo "ENVIRONMENT=${{ inputs.ENVIRONMENT }}" >> $GITHUB_ENV
          echo "ðŸ‘·$ENVIRONMENT"

      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
  
      - name: Destroy Terraform Backend
        if: ${{ inputs.environment == 'backend' && inputs.uphold }}
        run: |
          sudo apt update 2>&1> /dev/null
          sudo apt install -y j2cli 2>&1> /dev/null
          mkdir -p backend
          export AWS_S3_BACKEND=${{ secrets.AWS_S3_BACKEND }}
          j2 -e AWS_S3_BACKEND templates/backend.bootstrap.j2 -o backend/main.tf
          unset AWS_S3_BACKEND
          aws s3 cp s3://${{ secrets.AWS_S3_BACKEND }}/bootstrap/terraform.tfstate backend/
          terraform -chdir=backend init
          terraform -chdir=backend destroy -auto-approve
          echo "ðŸš¨ðŸš¨ðŸš¨Remove Terraform backend bucket bucket and dbnamodb tableðŸš¨ðŸš¨ðŸš¨"

      - name: Destroy Infra ${{ inputs.environment }}
        if: ${{ inputs.environment != 'backend' && inputs.uphold }}
        run: |
          sudo apt update 2>&1> /dev/null
          sudo apt install -y j2cli 2>&1> /dev/null

          export AWS_S3_BACKEND=${{ secrets.AWS_S3_BACKEND }}
          export AWS_S3_BACKEND_KEY=${{ secrets.AWS_S3_BACKEND_KEY }}
          j2 -e AWS_S3_BACKEND -e AWS_S3_BACKEND_KEY templates/backend.j2 -o backend.conf
          unset AWS_S3_BACKEND_KEY AWS_S3_BACKEND

          terraform init -backend-config=backend.conf
          terraform workspace select ${{ env.ENVIRONMENT }}

          terraform destroy -var="environment=$ENVIRONMENT" -auto-approve && \
             printf '%s\n' 'ðŸ”¥ðŸ”¥ðŸ”¥' "ðŸ”¥ðŸ”¥Destroy ${{ inputs.environment }} infraestructure" 'ðŸ”¥' || \
                printf '%s\n' 'ðŸ’¥ðŸ’¥ðŸ’¥' "ðŸ’¥ðŸ’¥Error to destroy inputs.environment }} infraestructure" 'ðŸ’¥'
